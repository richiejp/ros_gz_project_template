// Code generated by rclgo-gen. DO NOT EDIT.

package map_msgs_srv

/*
#include <rosidl_runtime_c/message_type_support_struct.h>
#include <map_msgs/srv/get_point_map_roi.h>
*/
import "C"

import (
	"context"
	"errors"
	"unsafe"

	"github.com/ATIinc/rclgo/pkg/rclgo"
	"github.com/ATIinc/rclgo/pkg/rclgo/typemap"
	"github.com/ATIinc/rclgo/pkg/rclgo/types"
)

func init() {
	typemap.RegisterService("map_msgs/GetPointMapROI", GetPointMapROITypeSupport)
	typemap.RegisterService("map_msgs/srv/GetPointMapROI", GetPointMapROITypeSupport)
}

type _GetPointMapROITypeSupport struct {}

func (s _GetPointMapROITypeSupport) Request() types.MessageTypeSupport {
	return GetPointMapROI_RequestTypeSupport
}

func (s _GetPointMapROITypeSupport) Response() types.MessageTypeSupport {
	return GetPointMapROI_ResponseTypeSupport
}

func (s _GetPointMapROITypeSupport) TypeSupport() unsafe.Pointer {
	return unsafe.Pointer(C.rosidl_typesupport_c__get_service_type_support_handle__map_msgs__srv__GetPointMapROI())
}

// Modifying this variable is undefined behavior.
var GetPointMapROITypeSupport types.ServiceTypeSupport = _GetPointMapROITypeSupport{}

// GetPointMapROIClient wraps rclgo.Client to provide type safe helper
// functions
type GetPointMapROIClient struct {
	*rclgo.Client
}

// NewGetPointMapROIClient creates and returns a new client for the
// GetPointMapROI
func NewGetPointMapROIClient(node *rclgo.Node, serviceName string, options *rclgo.ClientOptions) (*GetPointMapROIClient, error) {
	client, err := node.NewClient(serviceName, GetPointMapROITypeSupport, options)
	if err != nil {
		return nil, err
	}
	return &GetPointMapROIClient{client}, nil
}

func (s *GetPointMapROIClient) Send(ctx context.Context, req *GetPointMapROI_Request) (*GetPointMapROI_Response, *rclgo.ServiceInfo, error) {
	msg, rmw, err := s.Client.Send(ctx, req)
	if err != nil {
		return nil, rmw, err
	}
	typedMessage, ok := msg.(*GetPointMapROI_Response)
	if !ok {
		return nil, rmw, errors.New("invalid message type returned")
	}
	return typedMessage, rmw, err
}

type GetPointMapROIServiceResponseSender struct {
	sender rclgo.ServiceResponseSender
}

func (s GetPointMapROIServiceResponseSender) SendResponse(resp *GetPointMapROI_Response) error {
	return s.sender.SendResponse(resp)
}

type GetPointMapROIServiceRequestHandler func(*rclgo.ServiceInfo, *GetPointMapROI_Request, GetPointMapROIServiceResponseSender)

// GetPointMapROIService wraps rclgo.Service to provide type safe helper
// functions
type GetPointMapROIService struct {
	*rclgo.Service
}

// NewGetPointMapROIService creates and returns a new service for the
// GetPointMapROI
func NewGetPointMapROIService(node *rclgo.Node, name string, options *rclgo.ServiceOptions, handler GetPointMapROIServiceRequestHandler) (*GetPointMapROIService, error) {
	h := func(rmw *rclgo.ServiceInfo, msg types.Message, rs rclgo.ServiceResponseSender) {
		m := msg.(*GetPointMapROI_Request)
		responseSender := GetPointMapROIServiceResponseSender{sender: rs}
		handler(rmw, m, responseSender)
	}
	service, err := node.NewService(name, GetPointMapROITypeSupport, options, h)
	if err != nil {
		return nil, err
	}
	return &GetPointMapROIService{service}, nil
}
